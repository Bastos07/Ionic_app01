{"version":3,"file":"src_app_page_faq_faq_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAElB;AAErC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8CAAO;KACnB;CACF,CAAC;IAMW,oBAAoB,SAApB,oBAAoB;CAAG;AAAvB,oBAAoB;IAJhC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,oBAAoB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBQ;AACM;AACF;AAEA;AAEe;AAEvB;IAWxB,aAAa,SAAb,aAAa;CAAG;AAAhB,aAAa;IATzB,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,qEAAoB;SACrB;QACD,YAAY,EAAE,CAAC,8CAAO,CAAC;KACxB,CAAC;GACW,aAAa,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACnBwB;AACD;AAEjD,4CAA4C;AACuC;IAOtE,OAAO,SAAP,OAAO;IAQlB;IAEE,sBAAsB;IACd,GAAc,EACd,eAAgC;QADhC,QAAG,GAAH,GAAG,CAAW;QACd,oBAAe,GAAf,eAAe,CAAiB;QAP1C,iDAAiD;QACjD,SAAI,GAAe,EAAE,CAAC;IAOlB,CAAC;IAEL,QAAQ;QAEN,0EAA0E;QAC1E,mEAAU,CAAC,8DAAK,CAAC,mEAAU,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE;YAEtD,+EAA+E;YAC/E,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YAEd,iCAAiC;YACjC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;gBAExB,0CAA0C;gBAC1C,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBAEtB,6CAA6C;gBAC7C,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;gBAErB,8DAA8D;gBAC9D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAE3B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2DAA2D;IACrD,OAAO,CAAC,UAAU,EAAE,SAAS;;YACjC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,MAAM,EAAE,UAAU;gBAClB,OAAO,EAAE,SAAS;gBAClB,OAAO,EAAE,CAAC,IAAI,CAAC;aAChB,CAAC,CAAC;YACH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;KAAA;CACF;;YAvDoB,8DAAS;YAHrB,2DAAe;;AAUX,OAAO;IALnB,wDAAS,CAAC;QACT,QAAQ,EAAE,SAAS;QACnB,gEAA8B;;KAE/B,CAAC;GACW,OAAO,CAgDnB;AAhDmB","sources":["./src/app/page/faq/faq-routing.module.ts","./src/app/page/faq/faq.module.ts","./src/app/page/faq/faq.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { FaqPage } from './faq.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FaqPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class FaqPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { FaqPageRoutingModule } from './faq-routing.module';\r\n\r\nimport { FaqPage } from './faq.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    FaqPageRoutingModule\r\n  ],\r\n  declarations: [FaqPage]\r\n})\r\nexport class FaqPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\n// Importa todas as dependências necessárias\r\nimport { collection, Firestore, query, onSnapshot } from '@angular/fire/firestore';\r\n\r\n@Component({\r\n  selector: 'app-faq',\r\n  templateUrl: './faq.page.html',\r\n  styleUrls: ['./faq.page.scss'],\r\n})\r\nexport class FaqPage implements OnInit {\r\n\r\n  // Vai armazenar cada FAQ obtido\r\n  faq: any;\r\n\r\n  // Vai armazenar todos os FAQ obtidos para a view\r\n  faqs: Array<any> = [];\r\n\r\n  constructor(\r\n\r\n    // Injeta dependências\r\n    private afs: Firestore,\r\n    private alertController: AlertController\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    // Conectar ao banco de dados e obtém todos os documentos da coleção 'faq'\r\n    onSnapshot(query(collection(this.afs, 'faq')), (faqs) => {\r\n\r\n      // Limpa a lista de FAQ para carregar uma nova listagem em caso de atualização.\r\n      this.faq = [];\r\n\r\n      // Loop que itera cada faq obtida\r\n      faqs.docs.forEach((doc) => {\r\n\r\n        // Armazena dados da faq na variável 'faq'\r\n        this.faq = doc.data();\r\n\r\n        // Também armazena o ID do documento em 'faq'\r\n        this.faq.id = doc.id;\r\n\r\n        // Adiciona conteúdo de 'faq' em 'faqs' para ser usado na view\r\n        this.faqs.push(this.faq);\r\n\r\n      });\r\n    });\r\n  }\r\n\r\n  // Caixa de alerta que exibe a FAQ completa ao clicar nela.\r\n  async showFaq(alertTitle, alertText) {\r\n    const alert = await this.alertController.create({\r\n      header: alertTitle,\r\n      message: alertText,\r\n      buttons: ['Ok']\r\n    });\r\n    await alert.present();\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}