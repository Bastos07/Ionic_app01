{"version":3,"file":"src_app_page_view_view_module_ts.js","mappings":"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","sources":["./src/app/page/view/view-routing.module.ts","./src/app/page/view/view.module.ts","./src/app/page/view/view.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ViewPage } from './view.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ViewPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ViewPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ViewPageRoutingModule } from './view-routing.module';\r\n\r\nimport { ViewPage } from './view.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ViewPageRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [ViewPage]\r\n})\r\nexport class ViewPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n// Importa dependências\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { addDoc, collection, doc, Firestore, getDoc, onSnapshot, orderBy, query, updateDoc, where } from '@angular/fire/firestore';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { DateService } from 'src/app/services/date.service';\r\n\r\n@Component({\r\n  selector: 'app-view',\r\n  templateUrl: './view.page.html',\r\n  styleUrls: ['./view.page.scss'],\r\n})\r\nexport class ViewPage implements OnInit {\r\n\r\n  // Armazena o Id do artigo vindo da rota\r\n  public id: string;\r\n\r\n  // Armazena o artigo completo\r\n  art: any;\r\n\r\n  // Armazena comentários\r\n  comment: any;\r\n  commentData: any;\r\n  comments: Array<any> = [];\r\n  commentForm: FormGroup;\r\n\r\n  constructor(\r\n\r\n    // Injeta dependências\r\n    private afs: Firestore,\r\n    private activatedRoute: ActivatedRoute,\r\n    private route: Router,\r\n    public alertController: AlertController,\r\n    private fb: FormBuilder,\r\n    private date: DateService\r\n  ) { }\r\n\r\n  // 'ngOnInit()' deve ser 'async' por causa do 'await' usado logo abaixo!\r\n  async ngOnInit() {\r\n\r\n    // Cria formulário de comentários\r\n    this.createForm();\r\n\r\n    // Obtém o ID do artigo a ser exibido, da rota (URL)\r\n    this.id = this.activatedRoute.snapshot.paramMap.get('id');\r\n\r\n    // Obtém o artigo inteiro à partir do ID deste\r\n    const myArt = await getDoc(doc(this.afs, 'manual', this.id));\r\n\r\n    // Se o artigo foi encontrado...\r\n    if (myArt.exists()) {\r\n\r\n      // Armazena o artigo em 'art'\r\n      this.art = myArt.data();\r\n\r\n      // Incrementa 'views' do artigo\r\n      updateDoc(doc(this.afs, 'manual', this.id), {\r\n        views: (parseInt(this.art.views, 10) + 1).toString()\r\n      });\r\n\r\n      // Conecta ao banco de dados e obtém todos os comentários deste artigo\r\n      onSnapshot(query(\r\n        collection(this.afs, 'comment'),\r\n        where('article', '==', this.id),\r\n        where('status', '==', 'on'),\r\n        orderBy('date', 'desc')\r\n      ), (myComments) => {\r\n\r\n        // Limpa a lista de comentários para carregar novamente.\r\n        this.comments = [];\r\n\r\n        // Loop que itera cada faq obtida\r\n        myComments.forEach((myDoc) => {\r\n\r\n          // Armazena dados na variável 'faq'\r\n          const myComment = myDoc.data();\r\n\r\n          // Adiciona conteúdo de 'faq' em 'faqs' para ser usado na view\r\n          this.comments.push(myComment);\r\n\r\n        });\r\n\r\n      });\r\n\r\n\r\n      // Se não foi encontrado...\r\n    } else {\r\n\r\n      // Volta para a lista de artigos\r\n      this.route.navigate(['/usuarios']);\r\n    }\r\n\r\n  }\r\n\r\n  // Função que exibe caixa de alerta\r\n  async presentAlert(alertHeader, alertMessage) {\r\n    const alert = await this.alertController.create({\r\n      header: alertHeader,\r\n      message: alertMessage,\r\n      buttons: [{\r\n        text: 'OK',\r\n        handler: () => {\r\n\r\n          // Limpar campos do formulário\r\n          this.commentForm.markAsPristine();\r\n\r\n          // Preenche campos 'name' e 'email' com os valores atuais\r\n          this.commentForm.reset({\r\n            name: this.commentForm.value.name,\r\n            email: this.commentForm.value.email\r\n          });\r\n\r\n          return true;\r\n\r\n        }\r\n      }]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  // Função que cria o formulário\r\n  createForm() {\r\n    this.commentForm = this.fb.group({\r\n      name: ['',     // Valor inicial do campo\r\n        [\r\n          Validators.required,    // Campo obrigatório\r\n          Validators.minLength(3) // Pelo menos 3 caracteres\r\n        ]\r\n      ],\r\n      email: ['',    // Valor inicial do campo\r\n        [\r\n          Validators.required, // Campo obrigatório\r\n          Validators.email     // Deve ser um endereço de e-mail\r\n        ]\r\n      ],\r\n      comment: ['', // Valor inicial do campo\r\n        [\r\n          Validators.required,      // Campo obrigatório\r\n          Validators.minLength(5)   // Pelo menos 5 caracteres\r\n        ]\r\n      ]\r\n    });\r\n  }\r\n\r\n\r\n  // Processa envio do formulário\r\n  async submitForm() {\r\n\r\n    // Se o formulário tem erros ao enviar...\r\n    if (this.commentForm.invalid) {\r\n\r\n      // Exibe caixa de alerta\r\n      this.presentAlert(\r\n        'Ooooops!',\r\n        'Preencha todos os campos antes de enviar seus comentários...'\r\n      );\r\n\r\n      // Se formulário está ok...\r\n    } else {\r\n\r\n      this.commentData = this.commentForm.value;\r\n      this.commentData.date = this.date.brNow();\r\n      this.commentData.status = 'on';\r\n      this.commentData.article = this.id;\r\n\r\n      await addDoc(collection(this.afs, 'comment'), this.commentData)\r\n        .then(() => {\r\n          const firstName = this.commentForm.value.name.split(' ')[0];\r\n          this.presentAlert(\r\n            `Olá ${firstName}!`,\r\n            'Seu comentário foi enviado com sucesso.<br><br>Obrigado...'\r\n          );\r\n        })\r\n        .catch(() => {\r\n          this.presentAlert(\r\n            'Ooooops!',\r\n            'Ocorreu um erro ao enviar seu comentário.<br><br>Por favor, tente mais tarde...'\r\n          );\r\n        });\r\n    }\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}