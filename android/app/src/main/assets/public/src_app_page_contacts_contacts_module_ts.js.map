{"version":3,"file":"src_app_page_contacts_contacts_module_ts.js","mappings":"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","sources":["./src/app/page/contacts/contacts-routing.module.ts","./src/app/page/contacts/contacts.module.ts","./src/app/page/contacts/contacts.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ContactsPage } from './contacts.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ContactsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ContactsPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule,  } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { ContactsPageRoutingModule } from './contacts-routing.module';\r\nimport { ContactsPage } from './contacts.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ContactsPageRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [ContactsPage]\r\n})\r\nexport class ContactsPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n// Importa dependências\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';   // Classes do Reactive forms\r\nimport { Router } from '@angular/router';                              // Roteamento\r\nimport { AlertController } from '@ionic/angular';                      // Caixa de alerta do Ionic\r\nimport { addDoc, collection } from 'firebase/firestore'; // Firestore\r\nimport { Firestore } from '@angular/fire/firestore';\r\nimport { DateService } from '../../services/date.service';\r\n\r\n@Component({\r\n  selector: 'app-contacts',\r\n  templateUrl: './contacts.page.html',\r\n  styleUrls: ['./contacts.page.scss'],\r\n})\r\nexport class ContactsPage implements OnInit {\r\n\r\n  // Recebe o formulário\r\n  contactForm: FormGroup;\r\n\r\n  // Armazena documento para o Firestore\r\n  contactData: any;\r\n\r\n  // Armazena metadados do usuário logado\r\n  user: any;\r\n\r\n  constructor(\r\n\r\n    // Injeta dependências\r\n    private fb: FormBuilder,                  // Objeto do formulário\r\n    private alertController: AlertController, // Objeto da caixa de alerta\r\n    private router: Router,                    // Objeto que faz redirecionamento de rota\r\n    private afs: Firestore,\r\n    private date: DateService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    // Cria formulário\r\n    this.createForm();\r\n\r\n  }\r\n\r\n  // Função que cria o formulário\r\n  createForm() {\r\n    this.contactForm = this.fb.group({\r\n      name: ['',     // Valor inicial do campo\r\n        [\r\n          Validators.required,    // Campo obrigatório\r\n          Validators.minLength(3) // Pelo menos 3 caracteres\r\n        ]\r\n      ],\r\n      email: ['',    // Valor inicial do campo\r\n        [\r\n          Validators.required, // Campo obrigatório\r\n          Validators.email     // Deve ser um endereço de e-mail\r\n        ]\r\n      ],\r\n      subject: ['',  // Valor inicial do campo\r\n        [\r\n          Validators.required,    // Campo obrigatório\r\n          Validators.minLength(5) // Pelo menos 5 caracteres\r\n        ]\r\n      ],\r\n      message: ['', // Valor inicial do campo\r\n        [\r\n          Validators.required,      // Campo obrigatório\r\n          Validators.minLength(5)   // Pelo menos 5 caracteres\r\n        ]\r\n      ]\r\n    });\r\n  }\r\n\r\n  // Processa envio do formulário\r\n  async submitForm() {\r\n\r\n    // Se o formulário tem erros ao enviar...\r\n    if (this.contactForm.invalid) {\r\n\r\n      // Exibe caixa de alerta\r\n      this.presentAlert(\r\n        'Ooooops!',\r\n        'Preencha todos os campos antes de enviar...',\r\n        false\r\n      );\r\n\r\n      // Se formulário está ok...\r\n    } else {\r\n\r\n      // Formata os campos do documento do Firebase Firestore\r\n      this.contactData = this.contactForm.value;  // Dados do formulário\r\n      this.contactData.date = this.date.brNow(); // Data atual já formatada\r\n      this.contactData.status = 'recebido';       // Status do contato\r\n\r\n      // Armazena documento na coleção 'contact' do Firestore\r\n      await addDoc(collection(this.afs, 'contact'), this.contactData)\r\n\r\n        // Se deu certo...\r\n        .then(() => {\r\n\r\n          // Extrai primeiro nome do remetente\r\n          const firstName = this.contactForm.value.name.split(' ')[0];\r\n\r\n          // Exibe caixa de alerta\r\n          this.presentAlert(\r\n            `Olá ${firstName}!`,\r\n            'Seu contato foi enviado com sucesso.<br><br>Obrigado...',\r\n            true // Força recirecionamento\r\n          );\r\n        })\r\n\r\n        // Se deu errado...\r\n        .catch(() => {\r\n\r\n          // Exibe caixa de alerta\r\n          this.presentAlert(\r\n            'Ooooops!',\r\n            'ocorreu um erro ao enviar seu contato.<br><br>Por favor, tente mais tarde...',\r\n            false\r\n          );\r\n        });\r\n    }\r\n  }\r\n\r\n  // Função que exibe caixa de alerta\r\n  async presentAlert(alertHeader, alertMessage, alertRedirect) {\r\n    const alert = await this.alertController.create({\r\n      header: alertHeader,\r\n      message: alertMessage,\r\n      buttons: [{\r\n        text: 'OK',\r\n        handler: () => {\r\n\r\n          // Se solicitou redirecionamento...\r\n          if (alertRedirect) {\r\n\r\n            // Limpar campos do formulário\r\n            this.contactForm.markAsPristine();\r\n\r\n            // Preenche campos 'name' e 'email' com os valores atuais\r\n            this.contactForm.reset({\r\n              name: this.contactForm.value.name,\r\n              email: this.contactForm.value.email\r\n            });\r\n\r\n            // Redireciona para a página inicial\r\n            this.router.navigate(['/inicio']);\r\n\r\n            // Se não solicitou redirecionamento...\r\n          } else {\r\n\r\n            // Somente fecha o alert\r\n            return true;\r\n          }\r\n        }\r\n      }]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n\r\n  goSocial(social) {\r\n\r\n    let url = '';\r\n\r\n    switch (social) {\r\n      case 'github':\r\n        url = 'https://github.com/Luferat';\r\n        break;\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}